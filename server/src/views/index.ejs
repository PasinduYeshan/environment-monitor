<!DOCTYPE html>
<html>
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width,initial-scale=1">
        <title>EMonitor</title>
        <script
src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.9.4/Chart.js">
</script>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/semantic-ui/2.2.13/semantic.min.js"></script>
        <link rel="stylesheet" href="https://www.w3schools.com/w3css/4/w3.css">
        <link rel="stylesheet"
            href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
        <!-- <link rel="stylesheet" href="../static/style.css"> -->
    </head>
    <body>
        <!-- <div class="chart-container">
            <canvas id="tChart" style="width:100%;max-width:700px"></canvas>
        </div> -->
        <div class="d-flex align-items-center">
            <h1 class="display-3 m-2 p-4 align-content-center">Environment Monitor</h1>
        </div>
        <div class="table-div">
            <table class="table table-striped">
                <tr>
                    <th>#</th>
                    <th>Alert ID</th>
                    <th>Timestamp</th>

                    <th>Temperature (°C)</th>
                    <th>Temp SD</th>
                    <th>Humidity (%)</th>
                    <th>Humidity SD</th>
                    <th>Pressure (Pa)</th>
                    <th>Pressure SD</th>
                    <th>Light (%)</th>
                    <th>Light SD</th>
                </tr>
                <% values.forEach( function(value) { %>
                    <tr>
                        <td><%= value.id %></td>
                        <td><%= value.alert_id %></td>
                        
                        <% const t = value.time_stamp ; const ts = new Date(t).toLocaleDateString() + " " + new Date(t).toLocaleTimeString();%>
                        <td><%= ts %></td>
                        <td><%= value.temperature %></td>
                        <td><%= value.t_sd %></td>
                        <td><%= value.humidity %></td>
                        <td><%= value.h_sd %></td>
                        <td><%= value.pressure %></td>
                        <td><%= value.p_sd %></td>
                        <td><%= value.light %></td>
                        <td><%= value.l_sd %></td>
                    </tr>

                    <% }); %>
                
            </table>
            
        </div>
        <div id="valueData" data-test=<%= values %>></div>

        <!-- <script>
            var test = document.getElementById('valueData').dataset.test;
            console.log(test[0]);

            
            var xValues = [50,60,70,80,90,100,110,120,130,140,150];
            var yValues = [7,8,8,9,9,9,10,11,14,14,15];

            

            new Chart("tChart", {
            type: "line",
            data: {
                labels: xValues,
                datasets: [{
                backgroundColor: "rgba(0,0,0,2.0)",
                borderColor: "rgba(0,0,0,0.1)",
                data: yValues
                }]
            },
            
            });
        </script> -->
        <!-- <script>
            // Global parameters:
            // do not resize the chart canvas when its container does (keep at 600x400px)
            // Chart.defaults.global.responsive = false;
            
            // define the chart data
            var temperatureData = {
                labels : [{% for item in datetimes %}
                            "{{item}}",
                            {% endfor %}],
                datasets : [{
                    label: ' Temperature (°C)',
                    fill: true,
                    lineTension: 0.1,
                    backgroundColor: "rgba(253,128,128,0.4)",
                    borderColor: "rgba(253,128,128,1)",
                    borderCapStyle: 'butt',
                    borderDash: [],
                    borderDashOffset: 0.0,
                    borderJoinStyle: 'miter',
                    pointBorderColor: "rgba(253,128,128,1)",
                    pointBackgroundColor: "#fff",
                    pointBorderWidth: 1,
                    pointHoverRadius: 5,
                    pointHoverBackgroundColor: "rgba(253,128,128,1)",
                    pointHoverBorderColor: "rgba(253,128,128,1)",
                    pointHoverBorderWidth: 2,
                    pointRadius: 1,
                    pointHitRadius: 10,
                    data : [{% for item in t %}
                                {{item}},
                            {% endfor %}],
                    spanGaps: false
                }]
            }

            var humidityData = {
                labels : [{% for item in datetimes %}
                            "{{item}}",
                            {% endfor %}],
                datasets : [{
                    label: ' Humidity (%)',
                    fill: true,
                    lineTension: 0.1,
                    backgroundColor: "rgba(148,218,251,0.4)",
                    borderColor: "rgba(148,218,251,1)",
                    borderCapStyle: 'butt',
                    borderDash: [],
                    borderDashOffset: 0.0,
                    borderJoinStyle: 'miter',
                    pointBorderColor: "rgba(148,218,251,1)",
                    pointBackgroundColor: "#fff",
                    pointBorderWidth: 1,
                    pointHoverRadius: 5,
                    pointHoverBackgroundColor: "rgba(148,218,251,1)",
                    pointHoverBorderColor: "rgba(148,218,251,1)",
                    pointHoverBorderWidth: 2,
                    pointRadius: 1,
                    pointHitRadius: 10,
                    data : [{% for item in h %}
                                {{item}},
                            {% endfor %}],
                    spanGaps: false
                }]
            }

            var pressureData = {
                labels : [{% for item in datetimes %}
                            "{{item}}",
                            {% endfor %}],
                datasets : [{
                    label: ' Pressure (Pa)',
                    fill: true,
                    lineTension: 0.1,
                    backgroundColor: "rgba(252,186,57,0.4)",
                    borderColor: "rgba(252,186,57,1)",
                    borderCapStyle: 'butt',
                    borderDash: [],
                    borderDashOffset: 0.0,
                    borderJoinStyle: 'miter',
                    pointBorderColor: "rgba(252,186,57,1)",
                    pointBackgroundColor: "#fff",
                    pointBorderWidth: 1,
                    pointHoverRadius: 5,
                    pointHoverBackgroundColor: "rgba(252,186,57,1)",
                    pointHoverBorderColor: "rgba(252,186,57,1)",
                    pointHoverBorderWidth: 2,
                    pointRadius: 1,
                    pointHitRadius: 10,
                    data : [{% for item in p %}
                                {{item}},
                            {% endfor %}],
                    spanGaps: false
                }]
            }

            var lightData = {
                labels : [{% for item in datetimes %}
                            "{{item}}",
                            {% endfor %}],
                datasets : [{
                    label: ' Light (%)',
                    fill: true,
                    lineTension: 0.1,
                    backgroundColor: "rgba(38,231,166,0.4)",
                    borderColor: "rgba(38,231,166,1)",
                    borderCapStyle: 'butt',
                    borderDash: [],
                    borderDashOffset: 0.0,
                    borderJoinStyle: 'miter',
                    pointBorderColor: "rgba(38,231,166,1)",
                    pointBackgroundColor: "#fff",
                    pointBorderWidth: 1,
                    pointHoverRadius: 5,
                    pointHoverBackgroundColor: "rgba(38,231,166,1)",
                    pointHoverBorderColor: "rgba(38,231,166,1)",
                    pointHoverBorderWidth: 2,
                    pointRadius: 1,
                    pointHitRadius: 10,
                    data : [{% for item in l %}
                                {{item}},
                            {% endfor %}],
                    spanGaps: false
                }]
            }
 
            // get chart canvas
            var ctx1 = document.getElementById("temperatureChart").getContext("2d");
            
            // create the chart using the chart canvas
            var temperatureChart = new Chart(ctx1, {
            type: 'line',
            data: temperatureData,
            options: {
                maintainAspectRatio:false,
                scales: {
                        xAxes: [{
                        gridLines: {
                            display: true
                            }
                        }],
                        yAxes: [{
                        gridLines: {
                            display: false
                            }
                        }]
                    }
                }
            });

            var ctx2 = document.getElementById("humidityChart").getContext("2d");
            
            // create the chart using the chart canvas
            var humidityChart = new Chart(ctx2, {
            type: 'line',
            data: humidityData,
            options: {
                maintainAspectRatio:false,
                scales: {
                        xAxes: [{
                        gridLines: {
                            display: true
                            }
                        }],
                        yAxes: [{
                        gridLines: {
                            display: false
                            }
                        }]
                    }
                }
            
            });

            var ctx3 = document.getElementById("pressureChart").getContext("2d");
            
            // create the chart using the chart canvas
            var pressureChart = new Chart(ctx3, {
            type: 'line',
            data: pressureData,
            options: {
                maintainAspectRatio:false,
                scales: {
                        xAxes: [{
                        gridLines: {
                            display: true
                            }
                        }],
                        yAxes: [{
                        gridLines: {
                            display: false
                            }
                        }]
                    }
                }
            });

            var ctx4 = document.getElementById("lightChart").getContext("2d");
            
            // create the chart using the chart canvas
            var lightChart = new Chart(ctx4, {
            type: 'line',
            data: lightData,
            options: {
                maintainAspectRatio:false,
                scales: {
                        xAxes: [{
                        gridLines: {
                            display: true
                            }
                        }],
                        yAxes: [{
                        gridLines: {
                            display: false
                            }
                        }]
                    }
                }
            });

        </script> -->
    </body>
</html>